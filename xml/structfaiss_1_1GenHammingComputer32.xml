<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structfaiss_1_1GenHammingComputer32" kind="struct" language="C++" prot="public">
    <compoundname>faiss::GenHammingComputer32</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1GenHammingComputer32_1a44491cd17453bcc3609ed0d1ea33697e" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t faiss::GenHammingComputer32::a0</definition>
        <argsstring></argsstring>
        <name>a0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming-inl.h" line="370" column="1" bodyfile="faiss/utils/hamming-inl.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1GenHammingComputer32_1afed23c54eb8f2a5058ff7bb5da04001d" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t faiss::GenHammingComputer32::a1</definition>
        <argsstring></argsstring>
        <name>a1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming-inl.h" line="370" column="1" bodyfile="faiss/utils/hamming-inl.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1GenHammingComputer32_1ae6891a7ab323435d52965be30d8c1eab" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t faiss::GenHammingComputer32::a2</definition>
        <argsstring></argsstring>
        <name>a2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming-inl.h" line="370" column="1" bodyfile="faiss/utils/hamming-inl.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1GenHammingComputer32_1a2f34e7a27e6c8296adde76b2d276ba8d" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t faiss::GenHammingComputer32::a3</definition>
        <argsstring></argsstring>
        <name>a3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming-inl.h" line="370" column="1" bodyfile="faiss/utils/hamming-inl.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structfaiss_1_1GenHammingComputer32_1a6bbcc00bcfab59e6581debc48fe911aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::GenHammingComputer32::GenHammingComputer32</definition>
        <argsstring>(const uint8_t *a8, int code_size)</argsstring>
        <name>GenHammingComputer32</name>
        <param>
          <type>const uint8_t *</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming-inl.h" line="372" column="1" bodyfile="faiss/utils/hamming-inl.h" bodystart="372" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1GenHammingComputer32_1afb7d108eadd7adb7ebbc8bc6a45f5f28" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int faiss::GenHammingComputer32::hamming</definition>
        <argsstring>(const uint8_t *b8) const</argsstring>
        <name>hamming</name>
        <param>
          <type>const uint8_t *</type>
          <declname>b8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming-inl.h" line="378" column="1" bodyfile="faiss/utils/hamming-inl.h" bodystart="378" bodyend="384"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="faiss/utils/hamming-inl.h" line="369" column="1" bodyfile="faiss/utils/hamming-inl.h" bodystart="369" bodyend="386"/>
    <listofallmembers>
      <member refid="structfaiss_1_1GenHammingComputer32_1a44491cd17453bcc3609ed0d1ea33697e" prot="public" virt="non-virtual"><scope>faiss::GenHammingComputer32</scope><name>a0</name></member>
      <member refid="structfaiss_1_1GenHammingComputer32_1afed23c54eb8f2a5058ff7bb5da04001d" prot="public" virt="non-virtual"><scope>faiss::GenHammingComputer32</scope><name>a1</name></member>
      <member refid="structfaiss_1_1GenHammingComputer32_1ae6891a7ab323435d52965be30d8c1eab" prot="public" virt="non-virtual"><scope>faiss::GenHammingComputer32</scope><name>a2</name></member>
      <member refid="structfaiss_1_1GenHammingComputer32_1a2f34e7a27e6c8296adde76b2d276ba8d" prot="public" virt="non-virtual"><scope>faiss::GenHammingComputer32</scope><name>a3</name></member>
      <member refid="structfaiss_1_1GenHammingComputer32_1a6bbcc00bcfab59e6581debc48fe911aa" prot="public" virt="non-virtual"><scope>faiss::GenHammingComputer32</scope><name>GenHammingComputer32</name></member>
      <member refid="structfaiss_1_1GenHammingComputer32_1afb7d108eadd7adb7ebbc8bc6a45f5f28" prot="public" virt="non-virtual"><scope>faiss::GenHammingComputer32</scope><name>hamming</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
