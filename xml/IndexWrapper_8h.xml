<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="IndexWrapper_8h" kind="file" language="C++">
    <compoundname>IndexWrapper.h</compoundname>
    <includes refid="IndexReplicas_8h" local="no">faiss/IndexReplicas.h</includes>
    <includes refid="StandardGpuResources_8h" local="no">faiss/gpu/StandardGpuResources.h</includes>
    <includes local="no">functional</includes>
    <includes local="no">memory</includes>
    <includes local="no">vector</includes>
    <includes refid="IndexWrapper-inl_8h" local="no">faiss/gpu/perf/IndexWrapper-inl.h</includes>
    <incdepgraph>
      <node id="299">
        <label>list</label>
      </node>
      <node id="298">
        <label>faiss/gpu/utils/StackDeviceMemory.h</label>
        <link refid="StackDeviceMemory_8h_source"/>
        <childnode refid="292" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="301" relation="include">
        </childnode>
      </node>
      <node id="303">
        <label>functional</label>
      </node>
      <node id="290">
        <label>faiss/impl/ThreadedIndex.h</label>
      </node>
      <node id="294">
        <label>cublas_v2.h</label>
      </node>
      <node id="302">
        <label>faiss/gpu/utils/DeviceUtils.h</label>
        <link refid="DeviceUtils_8h_source"/>
        <childnode refid="289" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
        <childnode refid="294" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
      </node>
      <node id="293">
        <label>cuda_runtime.h</label>
      </node>
      <node id="286">
        <label>string</label>
      </node>
      <node id="304">
        <label>map</label>
      </node>
      <node id="280">
        <label>faiss/gpu/perf/IndexWrapper.h</label>
        <link refid="IndexWrapper_8h"/>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="291" relation="include">
        </childnode>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="305" relation="include">
        </childnode>
      </node>
      <node id="289">
        <label>faiss/impl/FaissAssert.h</label>
      </node>
      <node id="292">
        <label>faiss/gpu/GpuResources.h</label>
        <link refid="GpuResources_8h_source"/>
        <childnode refid="289" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
        <childnode refid="294" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
      </node>
      <node id="285">
        <label>typeinfo</label>
      </node>
      <node id="284">
        <label>cstdio</label>
      </node>
      <node id="301">
        <label>tuple</label>
      </node>
      <node id="297">
        <label>vector</label>
      </node>
      <node id="296">
        <label>utility</label>
      </node>
      <node id="287">
        <label>sstream</label>
      </node>
      <node id="288">
        <label>faiss/IndexBinary.h</label>
        <link refid="IndexBinary_8h_source"/>
        <childnode refid="284" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
        <childnode refid="286" relation="include">
        </childnode>
        <childnode refid="287" relation="include">
        </childnode>
        <childnode refid="289" relation="include">
        </childnode>
        <childnode refid="282" relation="include">
        </childnode>
      </node>
      <node id="291">
        <label>faiss/gpu/StandardGpuResources.h</label>
        <link refid="StandardGpuResources_8h_source"/>
        <childnode refid="292" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="304" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
      </node>
      <node id="300">
        <label>unordered_map</label>
      </node>
      <node id="282">
        <label>faiss/Index.h</label>
        <link refid="Index_8h_source"/>
        <childnode refid="283" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
        <childnode refid="286" relation="include">
        </childnode>
        <childnode refid="287" relation="include">
        </childnode>
      </node>
      <node id="283">
        <label>faiss/MetricType.h</label>
        <link refid="MetricType_8h_source"/>
      </node>
      <node id="281">
        <label>faiss/IndexReplicas.h</label>
        <link refid="IndexReplicas_8h_source"/>
        <childnode refid="282" relation="include">
        </childnode>
        <childnode refid="288" relation="include">
        </childnode>
        <childnode refid="290" relation="include">
        </childnode>
      </node>
      <node id="305">
        <label>faiss/gpu/perf/IndexWrapper-inl.h</label>
        <link refid="IndexWrapper-inl_8h_source"/>
        <childnode refid="289" relation="include">
        </childnode>
      </node>
      <node id="295">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="structfaiss_1_1gpu_1_1IndexWrapper" prot="public">faiss::gpu::IndexWrapper</innerclass>
    <innernamespace refid="namespacefaiss">faiss</innernamespace>
    <innernamespace refid="namespacefaiss_1_1gpu">faiss::gpu</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>Facebook,<sp/>Inc.<sp/>and<sp/>its<sp/>affiliates.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory<sp/>of<sp/>this<sp/>source<sp/>tree.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;faiss/IndexReplicas.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;faiss/gpu/StandardGpuResources.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacefaiss" kindref="compound">faiss</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">gpu<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>want<sp/>to<sp/>run<sp/>multi-GPU,<sp/>create<sp/>a<sp/>proxy<sp/>to<sp/>wrap<sp/>the<sp/>indices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>don&apos;t<sp/>want<sp/>multi-GPU,<sp/>don&apos;t<sp/>involve<sp/>the<sp/>proxy,<sp/>so<sp/>it<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>affect<sp/>the<sp/>timings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>GpuIndex&gt;</highlight></codeline>
<codeline lineno="23" refid="structfaiss_1_1gpu_1_1IndexWrapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfaiss_1_1gpu_1_1IndexWrapper" kindref="compound">IndexWrapper</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>std::vector&lt;std::unique_ptr&lt;faiss::gpu::StandardGpuResources&gt;&gt;<sp/>resources;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>std::vector&lt;std::unique_ptr&lt;GpuIndex&gt;&gt;<sp/>subIndex;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;faiss::IndexReplicas&gt;<sp/>replicaIndex;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="structfaiss_1_1gpu_1_1IndexWrapper" kindref="compound">IndexWrapper</ref>(</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numGpus,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;std::unique_ptr&lt;GpuIndex&gt;(<ref refid="classfaiss_1_1gpu_1_1GpuResourcesProvider" kindref="compound">GpuResourcesProvider</ref>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)&gt;<sp/>init);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="structfaiss_1_1Index" kindref="compound">faiss::Index</ref>*<sp/>getIndex();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>runOnIndices(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(<ref refid="classfaiss_1_1gpu_1_1GpuIndex" kindref="compound">GpuIndex</ref>*)&gt;<sp/>f);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setNumProbes(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nprobe);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">}<sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;faiss/gpu/perf/IndexWrapper-inl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="faiss/gpu/perf/IndexWrapper.h"/>
  </compounddef>
</doxygen>
