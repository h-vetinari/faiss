<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structfaiss_1_1VectorTransform" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>faiss::VectorTransform</compoundname>
    <derivedcompoundref refid="structfaiss_1_1CenteringTransform" prot="public" virt="non-virtual">faiss::CenteringTransform</derivedcompoundref>
    <derivedcompoundref refid="structfaiss_1_1ITQTransform" prot="public" virt="non-virtual">faiss::ITQTransform</derivedcompoundref>
    <derivedcompoundref refid="structfaiss_1_1LinearTransform" prot="public" virt="non-virtual">faiss::LinearTransform</derivedcompoundref>
    <derivedcompoundref refid="structfaiss_1_1NormalizationTransform" prot="public" virt="non-virtual">faiss::NormalizationTransform</derivedcompoundref>
    <derivedcompoundref refid="structfaiss_1_1RemapDimensionsTransform" prot="public" virt="non-virtual">faiss::RemapDimensionsTransform</derivedcompoundref>
    <includes refid="VectorTransform_8h" local="no">VectorTransform.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structfaiss_1_1VectorTransform_1a410516b4efdae041546d87f6bef2e422" prot="public" static="no">
        <type><ref refid="structfaiss_1_1Index_1ab64b96e821336c5b363d023386781d1d" kindref="member">Index::idx_t</ref></type>
        <definition>typedef Index::idx_t faiss::VectorTransform::idx_t</definition>
        <argsstring></argsstring>
        <name>idx_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/VectorTransform.h" line="29" column="1" bodyfile="faiss/VectorTransform.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1VectorTransform_1afdf56cbd261a571cf6b8872be5bd43b6" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int faiss::VectorTransform::d_in</definition>
        <argsstring></argsstring>
        <name>d_in</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/VectorTransform.h" line="31" column="1" bodyfile="faiss/VectorTransform.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1VectorTransform_1a589d612f7b1773614619a0cbecd728a9" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int faiss::VectorTransform::d_out</definition>
        <argsstring></argsstring>
        <name>d_out</name>
        <briefdescription>
<para>! input dimension </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/VectorTransform.h" line="32" column="1" bodyfile="faiss/VectorTransform.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1VectorTransform_1ab511f1ddf608c00204555881ca28cb02" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool faiss::VectorTransform::is_trained</definition>
        <argsstring></argsstring>
        <name>is_trained</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set if the <ref refid="structfaiss_1_1VectorTransform" kindref="compound">VectorTransform</ref> does not require training, or if training is done already </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/VectorTransform.h" line="41" column="1" bodyfile="faiss/VectorTransform.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structfaiss_1_1VectorTransform_1a137f48bab695736f0b1d79a50cddc858" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::VectorTransform::VectorTransform</definition>
        <argsstring>(int d_in=0, int d_out=0)</argsstring>
        <name>VectorTransform</name>
        <param>
          <type>int</type>
          <declname>d_in</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>d_out</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>! output dimension </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/VectorTransform.h" line="34" column="1" bodyfile="faiss/VectorTransform.h" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1VectorTransform_1ab781e04a6c8afe04689b3fc64be512d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void faiss::VectorTransform::train</definition>
        <argsstring>(idx_t n, const float *x)</argsstring>
        <name>train</name>
        <reimplementedby refid="structfaiss_1_1RandomRotationMatrix_1a8d7cd3057072bc2db0527ae4ac84b181">train</reimplementedby>
        <reimplementedby refid="structfaiss_1_1PCAMatrix_1a42f2fefbabe122868c59ea35b4ff080b">train</reimplementedby>
        <reimplementedby refid="structfaiss_1_1ITQMatrix_1abac7b3a00aa622c1590ea11f01abf073">train</reimplementedby>
        <reimplementedby refid="structfaiss_1_1ITQTransform_1a836c8adc25326ade1a5998276648c736">train</reimplementedby>
        <reimplementedby refid="structfaiss_1_1OPQMatrix_1abc57f03c88623a5844c7ac06a927ab6a">train</reimplementedby>
        <reimplementedby refid="structfaiss_1_1CenteringTransform_1ae63f2afed997c435fda588b5a8642893">train</reimplementedby>
        <param>
          <type>idx_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform training on a representative set of vectors. Does nothing by default.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>nb of training vectors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>training vecors, size n * d </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/VectorTransform.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1VectorTransform_1af7ea75906fb689ec667d2e685043c28a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>float* faiss::VectorTransform::apply</definition>
        <argsstring>(idx_t n, const float *x) const</argsstring>
        <name>apply</name>
        <param>
          <type>idx_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>apply the random roation, return new allocated matrix <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>size n * d_in </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size n * d_out </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/VectorTransform.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1VectorTransform_1a90f1a218c224c049f1bd8b77a78d6aa0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void faiss::VectorTransform::apply_noalloc</definition>
        <argsstring>(idx_t n, const float *x, float *xt) const =0</argsstring>
        <name>apply_noalloc</name>
        <reimplementedby refid="structfaiss_1_1LinearTransform_1aefb0ae9416652e408a96604f18a78d7d">apply_noalloc</reimplementedby>
        <reimplementedby refid="structfaiss_1_1ITQTransform_1af9bbe5be9e3c3f3f2919a46cc931443a">apply_noalloc</reimplementedby>
        <reimplementedby refid="structfaiss_1_1RemapDimensionsTransform_1aa3028183624634f5ab0d7d3fe78ffa9e">apply_noalloc</reimplementedby>
        <reimplementedby refid="structfaiss_1_1NormalizationTransform_1a282007331f7f6d96792c89fe1f9ecefd">apply_noalloc</reimplementedby>
        <reimplementedby refid="structfaiss_1_1CenteringTransform_1a0d9a07e911c43a598f64981f23afec0a">apply_noalloc</reimplementedby>
        <param>
          <type>idx_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>xt</declname>
        </param>
        <briefdescription>
<para>same as apply, but result is pre-allocated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/VectorTransform.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1VectorTransform_1a0913e3b521a6d34f523c291508e82adb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void faiss::VectorTransform::reverse_transform</definition>
        <argsstring>(idx_t n, const float *xt, float *x) const</argsstring>
        <name>reverse_transform</name>
        <reimplementedby refid="structfaiss_1_1LinearTransform_1aabcea47432734c860fdf6fcc3a998563">reverse_transform</reimplementedby>
        <reimplementedby refid="structfaiss_1_1RemapDimensionsTransform_1ac94a16755e3eb8693547f3a7ae90cec3">reverse_transform</reimplementedby>
        <reimplementedby refid="structfaiss_1_1NormalizationTransform_1af280b21563b819ebb292a6f63d011ad1">reverse_transform</reimplementedby>
        <reimplementedby refid="structfaiss_1_1CenteringTransform_1a01aacceb0950fcb39b0f5e18103ea6d5">reverse_transform</reimplementedby>
        <param>
          <type>idx_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>xt</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>reverse transformation. May not be implemented or may return approximate result </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/VectorTransform.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1VectorTransform_1a6e003e61f6f88afb18e65f1493b904a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual faiss::VectorTransform::~VectorTransform</definition>
        <argsstring>()</argsstring>
        <name>~VectorTransform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/VectorTransform.h" line="67" column="1" bodyfile="faiss/VectorTransform.h" bodystart="67" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Any transformation applied on a set of vectors </para>    </detaileddescription>
    <inheritancegraph>
      <node id="865">
        <label>faiss::LinearTransform</label>
        <link refid="structfaiss_1_1LinearTransform"/>
        <childnode refid="862" relation="public-inheritance">
        </childnode>
      </node>
      <node id="864">
        <label>faiss::ITQTransform</label>
        <link refid="structfaiss_1_1ITQTransform"/>
        <childnode refid="862" relation="public-inheritance">
        </childnode>
      </node>
      <node id="862">
        <label>faiss::VectorTransform</label>
        <link refid="structfaiss_1_1VectorTransform"/>
      </node>
      <node id="869">
        <label>faiss::RandomRotationMatrix</label>
        <link refid="structfaiss_1_1RandomRotationMatrix"/>
        <childnode refid="865" relation="public-inheritance">
        </childnode>
      </node>
      <node id="863">
        <label>faiss::CenteringTransform</label>
        <link refid="structfaiss_1_1CenteringTransform"/>
        <childnode refid="862" relation="public-inheritance">
        </childnode>
      </node>
      <node id="866">
        <label>faiss::ITQMatrix</label>
        <link refid="structfaiss_1_1ITQMatrix"/>
        <childnode refid="865" relation="public-inheritance">
        </childnode>
      </node>
      <node id="870">
        <label>faiss::NormalizationTransform</label>
        <link refid="structfaiss_1_1NormalizationTransform"/>
        <childnode refid="862" relation="public-inheritance">
        </childnode>
      </node>
      <node id="871">
        <label>faiss::RemapDimensionsTransform</label>
        <link refid="structfaiss_1_1RemapDimensionsTransform"/>
        <childnode refid="862" relation="public-inheritance">
        </childnode>
      </node>
      <node id="867">
        <label>faiss::OPQMatrix</label>
        <link refid="structfaiss_1_1OPQMatrix"/>
        <childnode refid="865" relation="public-inheritance">
        </childnode>
      </node>
      <node id="868">
        <label>faiss::PCAMatrix</label>
        <link refid="structfaiss_1_1PCAMatrix"/>
        <childnode refid="865" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="faiss/VectorTransform.h" line="27" column="1" bodyfile="faiss/VectorTransform.h" bodystart="27" bodyend="69"/>
    <listofallmembers>
      <member refid="structfaiss_1_1VectorTransform_1af7ea75906fb689ec667d2e685043c28a" prot="public" virt="non-virtual"><scope>faiss::VectorTransform</scope><name>apply</name></member>
      <member refid="structfaiss_1_1VectorTransform_1a90f1a218c224c049f1bd8b77a78d6aa0" prot="public" virt="pure-virtual"><scope>faiss::VectorTransform</scope><name>apply_noalloc</name></member>
      <member refid="structfaiss_1_1VectorTransform_1afdf56cbd261a571cf6b8872be5bd43b6" prot="public" virt="non-virtual"><scope>faiss::VectorTransform</scope><name>d_in</name></member>
      <member refid="structfaiss_1_1VectorTransform_1a589d612f7b1773614619a0cbecd728a9" prot="public" virt="non-virtual"><scope>faiss::VectorTransform</scope><name>d_out</name></member>
      <member refid="structfaiss_1_1VectorTransform_1a410516b4efdae041546d87f6bef2e422" prot="public" virt="non-virtual"><scope>faiss::VectorTransform</scope><name>idx_t</name></member>
      <member refid="structfaiss_1_1VectorTransform_1ab511f1ddf608c00204555881ca28cb02" prot="public" virt="non-virtual"><scope>faiss::VectorTransform</scope><name>is_trained</name></member>
      <member refid="structfaiss_1_1VectorTransform_1a0913e3b521a6d34f523c291508e82adb" prot="public" virt="virtual"><scope>faiss::VectorTransform</scope><name>reverse_transform</name></member>
      <member refid="structfaiss_1_1VectorTransform_1ab781e04a6c8afe04689b3fc64be512d5" prot="public" virt="virtual"><scope>faiss::VectorTransform</scope><name>train</name></member>
      <member refid="structfaiss_1_1VectorTransform_1a137f48bab695736f0b1d79a50cddc858" prot="public" virt="non-virtual"><scope>faiss::VectorTransform</scope><name>VectorTransform</name></member>
      <member refid="structfaiss_1_1VectorTransform_1a6e003e61f6f88afb18e65f1493b904a8" prot="public" virt="virtual"><scope>faiss::VectorTransform</scope><name>~VectorTransform</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
