<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structfaiss_1_1MaskedInvertedLists" kind="struct" language="C++" prot="public">
    <compoundname>faiss::MaskedInvertedLists</compoundname>
    <basecompoundref refid="structfaiss_1_1ReadOnlyInvertedLists" prot="public" virt="non-virtual">faiss::ReadOnlyInvertedLists</basecompoundref>
    <includes refid="InvertedLists_8h" local="no">InvertedLists.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1MaskedInvertedLists_1a7937835c69804149d23d532364e344ae" prot="public" static="no" mutable="no">
        <type>const <ref refid="structfaiss_1_1InvertedLists" kindref="compound">InvertedLists</ref> *</type>
        <definition>const InvertedLists* faiss::MaskedInvertedLists::il0</definition>
        <argsstring></argsstring>
        <name>il0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="321" column="1" bodyfile="faiss/invlists/InvertedLists.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1MaskedInvertedLists_1a22ff765ca2af7d001da3dbcc1605a4e2" prot="public" static="no" mutable="no">
        <type>const <ref refid="structfaiss_1_1InvertedLists" kindref="compound">InvertedLists</ref> *</type>
        <definition>const InvertedLists* faiss::MaskedInvertedLists::il1</definition>
        <argsstring></argsstring>
        <name>il1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="322" column="1" bodyfile="faiss/invlists/InvertedLists.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1InvertedLists_1afaf8b7aa3e846aa4553f6aae67827ec8" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t faiss::InvertedLists::nlist</definition>
        <argsstring></argsstring>
        <name>nlist</name>
        <briefdescription>
<para>number of possible key values </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="33" column="1" bodyfile="faiss/invlists/InvertedLists.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1InvertedLists_1ae06049e4259edb47d443ef87bdedc744" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t faiss::InvertedLists::code_size</definition>
        <argsstring></argsstring>
        <name>code_size</name>
        <briefdescription>
<para>code size per vector in bytes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="34" column="1" bodyfile="faiss/invlists/InvertedLists.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structfaiss_1_1MaskedInvertedLists_1a5652627d0f311598a76c5f9ceea461c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>faiss::MaskedInvertedLists::MaskedInvertedLists</definition>
        <argsstring>(const InvertedLists *il0, const InvertedLists *il1)</argsstring>
        <name>MaskedInvertedLists</name>
        <param>
          <type>const <ref refid="structfaiss_1_1InvertedLists" kindref="compound">InvertedLists</ref> *</type>
          <declname>il0</declname>
        </param>
        <param>
          <type>const <ref refid="structfaiss_1_1InvertedLists" kindref="compound">InvertedLists</ref> *</type>
          <declname>il1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="324" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1MaskedInvertedLists_1a5c400887da892a68ce47eff56e30dffc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t faiss::MaskedInvertedLists::list_size</definition>
        <argsstring>(size_t list_no) const override</argsstring>
        <name>list_size</name>
        <reimplements refid="structfaiss_1_1InvertedLists_1a9bd256053ee360473842105460fe285f">list_size</reimplements>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <briefdescription>
<para>get the size of a list </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="326" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1MaskedInvertedLists_1aaee0fe78a47957d1397302877714bafd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const uint8_t *</type>
        <definition>const uint8_t* faiss::MaskedInvertedLists::get_codes</definition>
        <argsstring>(size_t list_no) const override</argsstring>
        <name>get_codes</name>
        <reimplements refid="structfaiss_1_1InvertedLists_1a60b12f9efe940b617a8380adceef4032">get_codes</reimplements>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the codes for an inverted list must be released by release_codes</para><para><simplesect kind="return"><para>codes size list_size * code_size </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="327" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1MaskedInvertedLists_1aa877bb829e7dfdd0a8fe80e1a3484955" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const idx_t *</type>
        <definition>const idx_t* faiss::MaskedInvertedLists::get_ids</definition>
        <argsstring>(size_t list_no) const override</argsstring>
        <name>get_ids</name>
        <reimplements refid="structfaiss_1_1InvertedLists_1a3ab6b389d8d85c5fbf23889064df7e95">get_ids</reimplements>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the ids for an inverted list must be released by release_ids</para><para><simplesect kind="return"><para>ids size list_size </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="328" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1MaskedInvertedLists_1a64e66ef4c7dc387091f533cc61d88273" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void faiss::MaskedInvertedLists::release_codes</definition>
        <argsstring>(size_t list_no, const uint8_t *codes) const override</argsstring>
        <name>release_codes</name>
        <reimplements refid="structfaiss_1_1InvertedLists_1a9a24bd313ece4e8e281f8bb28b5f528c">release_codes</reimplements>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>codes</declname>
        </param>
        <briefdescription>
<para>release codes returned by get_codes (default implementation is nop </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="330" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1MaskedInvertedLists_1a86c8d8c022c79c32b3f776f2ad4f3b1e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void faiss::MaskedInvertedLists::release_ids</definition>
        <argsstring>(size_t list_no, const idx_t *ids) const override</argsstring>
        <name>release_ids</name>
        <reimplements refid="structfaiss_1_1InvertedLists_1ad9bd9641ac86e0851d39a96119db3e78">release_ids</reimplements>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <param>
          <type>const idx_t *</type>
          <declname>ids</declname>
        </param>
        <briefdescription>
<para>release ids returned by get_ids </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="331" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1MaskedInvertedLists_1af0d9f7b61caef91e30124b0f7a9d44b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>idx_t</type>
        <definition>idx_t faiss::MaskedInvertedLists::get_single_id</definition>
        <argsstring>(size_t list_no, size_t offset) const override</argsstring>
        <name>get_single_id</name>
        <reimplements refid="structfaiss_1_1InvertedLists_1ac1fb72410cefa4f4d28ec90677c02ab3">get_single_id</reimplements>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a single id in an inverted list </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="333" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1MaskedInvertedLists_1a53f2748924f85f77e24b9309fdecfba2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const uint8_t *</type>
        <definition>const uint8_t* faiss::MaskedInvertedLists::get_single_code</definition>
        <argsstring>(size_t list_no, size_t offset) const override</argsstring>
        <name>get_single_code</name>
        <reimplements refid="structfaiss_1_1InvertedLists_1a8d3382c2a672340abd227c00cf84ad42">get_single_code</reimplements>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a single code in an inverted list (should be deallocated with release_codes) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="335" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1MaskedInvertedLists_1a5fbd34b4052c314148c44f14b4d3c2d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void faiss::MaskedInvertedLists::prefetch_lists</definition>
        <argsstring>(const idx_t *list_nos, int nlist) const override</argsstring>
        <name>prefetch_lists</name>
        <reimplements refid="structfaiss_1_1InvertedLists_1aa661652a062ecb58b02f10d2a671c9fe">prefetch_lists</reimplements>
        <param>
          <type>const idx_t *</type>
          <declname>list_nos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nlist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>prepare the following lists (default does nothing) a list can be -1 hence the signed long </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="338" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1ReadOnlyInvertedLists_1a0734538244d8c5969e3e23e38faf1c0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t faiss::ReadOnlyInvertedLists::add_entries</definition>
        <argsstring>(size_t list_no, size_t n_entry, const idx_t *ids, const uint8_t *code) override</argsstring>
        <name>add_entries</name>
        <reimplements refid="structfaiss_1_1InvertedLists_1a0a2adbbd1d6b4f8ed1cbfa9bb93f4401">add_entries</reimplements>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n_entry</declname>
        </param>
        <param>
          <type>const idx_t *</type>
          <declname>ids</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="231" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1ReadOnlyInvertedLists_1a33c3a5174bcf6709dcefec8bdc4b9a52" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void faiss::ReadOnlyInvertedLists::update_entries</definition>
        <argsstring>(size_t list_no, size_t offset, size_t n_entry, const idx_t *ids, const uint8_t *code) override</argsstring>
        <name>update_entries</name>
        <reimplements refid="structfaiss_1_1InvertedLists_1afb45f0f325bf82f73737d804f8dbf49e">update_entries</reimplements>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n_entry</declname>
        </param>
        <param>
          <type>const idx_t *</type>
          <declname>ids</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="237" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1ReadOnlyInvertedLists_1a7b65c76388ba2fbc17a7060f6cf87039" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void faiss::ReadOnlyInvertedLists::resize</definition>
        <argsstring>(size_t list_no, size_t new_size) override</argsstring>
        <name>resize</name>
        <reimplements refid="structfaiss_1_1InvertedLists_1aae502a3372d94450e0b8ff4350b43610">resize</reimplements>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>new_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1InvertedLists_1a5b4328db9d4e2832de1a66bc6aa479de" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t faiss::InvertedLists::add_entry</definition>
        <argsstring>(size_t list_no, idx_t theid, const uint8_t *code)</argsstring>
        <name>add_entry</name>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <param>
          <type>idx_t</type>
          <declname>theid</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>add one entry to an inverted list </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1InvertedLists_1aa4fca5b69a56ab5b65274f3ff5ca7705" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void faiss::InvertedLists::update_entry</definition>
        <argsstring>(size_t list_no, size_t offset, idx_t id, const uint8_t *code)</argsstring>
        <name>update_entry</name>
        <param>
          <type>size_t</type>
          <declname>list_no</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>idx_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1InvertedLists_1ada14d9bbf04c21b36f61971abece616e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void faiss::InvertedLists::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1InvertedLists_1ac2a0686121ef5bdd6eb70f7eb3cf9b3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::InvertedLists::merge_from</definition>
        <argsstring>(InvertedLists *oivf, size_t add_id)</argsstring>
        <name>merge_from</name>
        <param>
          <type><ref refid="structfaiss_1_1InvertedLists" kindref="compound">InvertedLists</ref> *</type>
          <declname>oivf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>add_id</declname>
        </param>
        <briefdescription>
<para>move all entries from oivf (empty on output) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1InvertedLists_1a022deb11a08e2dad3386369e90f946a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double faiss::InvertedLists::imbalance_factor</definition>
        <argsstring>() const</argsstring>
        <name>imbalance_factor</name>
        <briefdescription>
<para>1= perfectly balanced, &gt;1: imbalanced </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1InvertedLists_1ac82ad98d664f6478aa919c0ec1b811cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::InvertedLists::print_stats</definition>
        <argsstring>() const</argsstring>
        <name>print_stats</name>
        <briefdescription>
<para>display some stats about the inverted lists </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1InvertedLists_1a903eed79c2fd1483c6e0eb500200da9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t faiss::InvertedLists::compute_ntotal</definition>
        <argsstring>() const</argsstring>
        <name>compute_ntotal</name>
        <briefdescription>
<para>sum up list sizes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="123" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structfaiss_1_1InvertedLists_1a2bb406f72dcad45cf03974ff14bfa473" prot="public" static="no">
        <type><ref refid="structfaiss_1_1Index_1ab64b96e821336c5b363d023386781d1d" kindref="member">Index::idx_t</ref></type>
        <definition>typedef Index::idx_t faiss::InvertedLists::idx_t</definition>
        <argsstring></argsstring>
        <name>idx_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="31" column="1" bodyfile="faiss/invlists/InvertedLists.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structfaiss_1_1InvertedLists_1aae4b0f912ddda23dfef1085b4b683af7" prot="public" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t faiss::InvertedLists::INVALID_CODE_SIZE</definition>
        <argsstring></argsstring>
        <name>INVALID_CODE_SIZE</name>
        <initializer>= static_cast&lt;size_t&gt;(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>used for <ref refid="structfaiss_1_1BlockInvertedLists" kindref="compound">BlockInvertedLists</ref>, where the codes are packed into groups and the individual code size is meaningless </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/invlists/InvertedLists.h" line="40" column="1" bodyfile="faiss/invlists/InvertedLists.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>use the first inverted lists if they are non-empty otherwise use the second</para><para>This is useful if il1 has a few inverted lists that are too long, and that il0 has replacement lists for those, with empty lists for the others. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="697">
        <label>faiss::InvertedLists</label>
        <link refid="structfaiss_1_1InvertedLists"/>
      </node>
      <node id="695">
        <label>faiss::MaskedInvertedLists</label>
        <link refid="structfaiss_1_1MaskedInvertedLists"/>
        <childnode refid="696" relation="public-inheritance">
        </childnode>
      </node>
      <node id="696">
        <label>faiss::ReadOnlyInvertedLists</label>
        <link refid="structfaiss_1_1ReadOnlyInvertedLists"/>
        <childnode refid="697" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="700">
        <label>faiss::InvertedLists</label>
        <link refid="structfaiss_1_1InvertedLists"/>
      </node>
      <node id="698">
        <label>faiss::MaskedInvertedLists</label>
        <link refid="structfaiss_1_1MaskedInvertedLists"/>
        <childnode refid="699" relation="public-inheritance">
        </childnode>
        <childnode refid="700" relation="usage">
          <edgelabel>il0</edgelabel>
          <edgelabel>il1</edgelabel>
        </childnode>
      </node>
      <node id="699">
        <label>faiss::ReadOnlyInvertedLists</label>
        <link refid="structfaiss_1_1ReadOnlyInvertedLists"/>
        <childnode refid="700" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="faiss/invlists/InvertedLists.h" line="320" column="1" bodyfile="faiss/invlists/InvertedLists.h" bodystart="320" bodyend="339"/>
    <listofallmembers>
      <member refid="structfaiss_1_1ReadOnlyInvertedLists_1a0734538244d8c5969e3e23e38faf1c0c" prot="public" virt="virtual"><scope>faiss::MaskedInvertedLists</scope><name>add_entries</name></member>
      <member refid="structfaiss_1_1InvertedLists_1a5b4328db9d4e2832de1a66bc6aa479de" prot="public" virt="virtual"><scope>faiss::MaskedInvertedLists</scope><name>add_entry</name></member>
      <member refid="structfaiss_1_1InvertedLists_1ae06049e4259edb47d443ef87bdedc744" prot="public" virt="non-virtual"><scope>faiss::MaskedInvertedLists</scope><name>code_size</name></member>
      <member refid="structfaiss_1_1InvertedLists_1a903eed79c2fd1483c6e0eb500200da9f" prot="public" virt="non-virtual"><scope>faiss::MaskedInvertedLists</scope><name>compute_ntotal</name></member>
      <member refid="structfaiss_1_1MaskedInvertedLists_1aaee0fe78a47957d1397302877714bafd" prot="public" virt="virtual"><scope>faiss::MaskedInvertedLists</scope><name>get_codes</name></member>
      <member refid="structfaiss_1_1MaskedInvertedLists_1aa877bb829e7dfdd0a8fe80e1a3484955" prot="public" virt="virtual"><scope>faiss::MaskedInvertedLists</scope><name>get_ids</name></member>
      <member refid="structfaiss_1_1MaskedInvertedLists_1a53f2748924f85f77e24b9309fdecfba2" prot="public" virt="virtual"><scope>faiss::MaskedInvertedLists</scope><name>get_single_code</name></member>
      <member refid="structfaiss_1_1MaskedInvertedLists_1af0d9f7b61caef91e30124b0f7a9d44b9" prot="public" virt="virtual"><scope>faiss::MaskedInvertedLists</scope><name>get_single_id</name></member>
      <member refid="structfaiss_1_1InvertedLists_1a2bb406f72dcad45cf03974ff14bfa473" prot="public" virt="non-virtual"><scope>faiss::MaskedInvertedLists</scope><name>idx_t</name></member>
      <member refid="structfaiss_1_1MaskedInvertedLists_1a7937835c69804149d23d532364e344ae" prot="public" virt="non-virtual"><scope>faiss::MaskedInvertedLists</scope><name>il0</name></member>
      <member refid="structfaiss_1_1MaskedInvertedLists_1a22ff765ca2af7d001da3dbcc1605a4e2" prot="public" virt="non-virtual"><scope>faiss::MaskedInvertedLists</scope><name>il1</name></member>
      <member refid="structfaiss_1_1InvertedLists_1a022deb11a08e2dad3386369e90f946a8" prot="public" virt="non-virtual"><scope>faiss::MaskedInvertedLists</scope><name>imbalance_factor</name></member>
      <member refid="structfaiss_1_1InvertedLists_1aae4b0f912ddda23dfef1085b4b683af7" prot="public" virt="non-virtual"><scope>faiss::MaskedInvertedLists</scope><name>INVALID_CODE_SIZE</name></member>
      <member refid="structfaiss_1_1InvertedLists_1a83d053d03720d938dc4fc4e2f674619c" prot="public" virt="non-virtual"><scope>faiss::MaskedInvertedLists</scope><name>InvertedLists</name></member>
      <member refid="structfaiss_1_1MaskedInvertedLists_1a5c400887da892a68ce47eff56e30dffc" prot="public" virt="virtual"><scope>faiss::MaskedInvertedLists</scope><name>list_size</name></member>
      <member refid="structfaiss_1_1MaskedInvertedLists_1a5652627d0f311598a76c5f9ceea461c1" prot="public" virt="non-virtual"><scope>faiss::MaskedInvertedLists</scope><name>MaskedInvertedLists</name></member>
      <member refid="structfaiss_1_1InvertedLists_1ac2a0686121ef5bdd6eb70f7eb3cf9b3a" prot="public" virt="non-virtual"><scope>faiss::MaskedInvertedLists</scope><name>merge_from</name></member>
      <member refid="structfaiss_1_1InvertedLists_1afaf8b7aa3e846aa4553f6aae67827ec8" prot="public" virt="non-virtual"><scope>faiss::MaskedInvertedLists</scope><name>nlist</name></member>
      <member refid="structfaiss_1_1MaskedInvertedLists_1a5fbd34b4052c314148c44f14b4d3c2d3" prot="public" virt="virtual"><scope>faiss::MaskedInvertedLists</scope><name>prefetch_lists</name></member>
      <member refid="structfaiss_1_1InvertedLists_1ac82ad98d664f6478aa919c0ec1b811cc" prot="public" virt="non-virtual"><scope>faiss::MaskedInvertedLists</scope><name>print_stats</name></member>
      <member refid="structfaiss_1_1ReadOnlyInvertedLists_1a38b8814659bc9dd48a96191aa3f1b01c" prot="public" virt="non-virtual"><scope>faiss::MaskedInvertedLists</scope><name>ReadOnlyInvertedLists</name></member>
      <member refid="structfaiss_1_1MaskedInvertedLists_1a64e66ef4c7dc387091f533cc61d88273" prot="public" virt="virtual"><scope>faiss::MaskedInvertedLists</scope><name>release_codes</name></member>
      <member refid="structfaiss_1_1MaskedInvertedLists_1a86c8d8c022c79c32b3f776f2ad4f3b1e" prot="public" virt="virtual"><scope>faiss::MaskedInvertedLists</scope><name>release_ids</name></member>
      <member refid="structfaiss_1_1InvertedLists_1ada14d9bbf04c21b36f61971abece616e" prot="public" virt="virtual"><scope>faiss::MaskedInvertedLists</scope><name>reset</name></member>
      <member refid="structfaiss_1_1ReadOnlyInvertedLists_1a7b65c76388ba2fbc17a7060f6cf87039" prot="public" virt="virtual"><scope>faiss::MaskedInvertedLists</scope><name>resize</name></member>
      <member refid="structfaiss_1_1ReadOnlyInvertedLists_1a33c3a5174bcf6709dcefec8bdc4b9a52" prot="public" virt="virtual"><scope>faiss::MaskedInvertedLists</scope><name>update_entries</name></member>
      <member refid="structfaiss_1_1InvertedLists_1aa4fca5b69a56ab5b65274f3ff5ca7705" prot="public" virt="virtual"><scope>faiss::MaskedInvertedLists</scope><name>update_entry</name></member>
      <member refid="structfaiss_1_1InvertedLists_1a74508f4759d1b37c5a9e016c495d0dc1" prot="public" virt="virtual"><scope>faiss::MaskedInvertedLists</scope><name>~InvertedLists</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
