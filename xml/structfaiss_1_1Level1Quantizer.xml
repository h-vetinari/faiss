<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structfaiss_1_1Level1Quantizer" kind="struct" language="C++" prot="public">
    <compoundname>faiss::Level1Quantizer</compoundname>
    <derivedcompoundref refid="structfaiss_1_1IndexIVF" prot="public" virt="non-virtual">faiss::IndexIVF</derivedcompoundref>
    <includes refid="IndexIVF_8h" local="no">IndexIVF.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1Level1Quantizer_1a3cf99e2ee92b8558a066f821efab95d5" prot="public" static="no" mutable="no">
        <type><ref refid="structfaiss_1_1Index" kindref="compound">Index</ref> *</type>
        <definition>Index* faiss::Level1Quantizer::quantizer</definition>
        <argsstring></argsstring>
        <name>quantizer</name>
        <briefdescription>
<para>quantizer that maps vectors to inverted lists </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="32" column="1" bodyfile="faiss/IndexIVF.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1Level1Quantizer_1a1c4fc9d874d9492ee0ea27a5be388fa7" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t faiss::Level1Quantizer::nlist</definition>
        <argsstring></argsstring>
        <name>nlist</name>
        <briefdescription>
<para>number of possible key values </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="33" column="1" bodyfile="faiss/IndexIVF.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1Level1Quantizer_1a1dcea762fc322fdcffe64f78994edea0" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char faiss::Level1Quantizer::quantizer_trains_alone</definition>
        <argsstring></argsstring>
        <name>quantizer_trains_alone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>= 0: use the quantizer as index in a kmeans training = 1: just pass on the training set to the train() of the quantizer = 2: kmeans training on a flat index + add the centroids to the quantizer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="40" column="1" bodyfile="faiss/IndexIVF.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1Level1Quantizer_1ab688c629cd42122d73517078b87f483d" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool faiss::Level1Quantizer::own_fields</definition>
        <argsstring></argsstring>
        <name>own_fields</name>
        <briefdescription>
<para>whether object owns the quantizer </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="41" column="1" bodyfile="faiss/IndexIVF.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1Level1Quantizer_1abb7097ed40b15ba0af08af6d03608f72" prot="public" static="no" mutable="no">
        <type><ref refid="structfaiss_1_1ClusteringParameters" kindref="compound">ClusteringParameters</ref></type>
        <definition>ClusteringParameters faiss::Level1Quantizer::cp</definition>
        <argsstring></argsstring>
        <name>cp</name>
        <briefdescription>
<para>to override default clustering params </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="43" column="1" bodyfile="faiss/IndexIVF.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1Level1Quantizer_1a45d29dd6a5c53789c08e5ceb3f63d989" prot="public" static="no" mutable="no">
        <type><ref refid="structfaiss_1_1Index" kindref="compound">Index</ref> *</type>
        <definition>Index* faiss::Level1Quantizer::clustering_index</definition>
        <argsstring></argsstring>
        <name>clustering_index</name>
        <briefdescription>
<para>to override index used during clustering </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="44" column="1" bodyfile="faiss/IndexIVF.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structfaiss_1_1Level1Quantizer_1a0069a6ee1e32c2e0c1c7df9a95740dd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::Level1Quantizer::train_q1</definition>
        <argsstring>(size_t n, const float *x, bool verbose, MetricType metric_type)</argsstring>
        <name>train_q1</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
        </param>
        <param>
          <type><ref refid="namespacefaiss_1afd12191c638da74760ff397cf319752c" kindref="member">MetricType</ref></type>
          <declname>metric_type</declname>
        </param>
        <briefdescription>
<para>Trains the quantizer and calls train_residual to train sub-quantizers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1Level1Quantizer_1a28fb5379de2f35f1b86ae5019ec4128f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t faiss::Level1Quantizer::coarse_code_size</definition>
        <argsstring>() const</argsstring>
        <name>coarse_code_size</name>
        <briefdescription>
<para>compute the number of bytes required to store list ids </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1Level1Quantizer_1a8d36d811aaf11daeae2a3f580747c5b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::Level1Quantizer::encode_listno</definition>
        <argsstring>(Index::idx_t list_no, uint8_t *code) const</argsstring>
        <name>encode_listno</name>
        <param>
          <type><ref refid="structfaiss_1_1Index_1ab64b96e821336c5b363d023386781d1d" kindref="member">Index::idx_t</ref></type>
          <declname>list_no</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1Level1Quantizer_1a64f28832f84e8559f9b76ccd3a3046d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structfaiss_1_1Index_1ab64b96e821336c5b363d023386781d1d" kindref="member">Index::idx_t</ref></type>
        <definition>Index::idx_t faiss::Level1Quantizer::decode_listno</definition>
        <argsstring>(const uint8_t *code) const</argsstring>
        <name>decode_listno</name>
        <param>
          <type>const uint8_t *</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1Level1Quantizer_1a7262e1eb542b177308dab0c043e90d01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>faiss::Level1Quantizer::Level1Quantizer</definition>
        <argsstring>(Index *quantizer, size_t nlist)</argsstring>
        <name>Level1Quantizer</name>
        <param>
          <type><ref refid="structfaiss_1_1Index" kindref="compound">Index</ref> *</type>
          <declname>quantizer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nlist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1Level1Quantizer_1a7623b6432ff9faee737ebe36b415fa18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>faiss::Level1Quantizer::Level1Quantizer</definition>
        <argsstring>()</argsstring>
        <name>Level1Quantizer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1Level1Quantizer_1ab0d7fc7420f306522923a96feddae7ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>faiss::Level1Quantizer::~Level1Quantizer</definition>
        <argsstring>()</argsstring>
        <name>~Level1Quantizer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexIVF.h" line="62" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Encapsulates a quantizer object for the <ref refid="structfaiss_1_1IndexIVF" kindref="compound">IndexIVF</ref></para><para>The class isolates the fields that are independent of the storage of the lists (especially training) </para>    </detaileddescription>
    <inheritancegraph>
      <node id="683">
        <label>faiss::IndexIVFSpectralHash</label>
        <link refid="structfaiss_1_1IndexIVFSpectralHash"/>
        <childnode refid="676" relation="public-inheritance">
        </childnode>
      </node>
      <node id="681">
        <label>faiss::IndexIVFPQFastScan</label>
        <link refid="structfaiss_1_1IndexIVFPQFastScan"/>
        <childnode refid="676" relation="public-inheritance">
        </childnode>
      </node>
      <node id="675">
        <label>faiss::Level1Quantizer</label>
        <link refid="structfaiss_1_1Level1Quantizer"/>
      </node>
      <node id="682">
        <label>faiss::IndexIVFScalarQuantizer</label>
        <link refid="structfaiss_1_1IndexIVFScalarQuantizer"/>
        <childnode refid="676" relation="public-inheritance">
        </childnode>
      </node>
      <node id="676">
        <label>faiss::IndexIVF</label>
        <link refid="structfaiss_1_1IndexIVF"/>
        <childnode refid="675" relation="public-inheritance">
        </childnode>
      </node>
      <node id="677">
        <label>faiss::IndexIVFFlat</label>
        <link refid="structfaiss_1_1IndexIVFFlat"/>
        <childnode refid="676" relation="public-inheritance">
        </childnode>
      </node>
      <node id="679">
        <label>faiss::IndexIVFPQ</label>
        <link refid="structfaiss_1_1IndexIVFPQ"/>
        <childnode refid="676" relation="public-inheritance">
        </childnode>
      </node>
      <node id="678">
        <label>faiss::IndexIVFFlatDedup</label>
        <link refid="structfaiss_1_1IndexIVFFlatDedup"/>
        <childnode refid="677" relation="public-inheritance">
        </childnode>
      </node>
      <node id="680">
        <label>faiss::IndexIVFPQR</label>
        <link refid="structfaiss_1_1IndexIVFPQR"/>
        <childnode refid="679" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="684">
        <label>faiss::Level1Quantizer</label>
        <link refid="structfaiss_1_1Level1Quantizer"/>
        <childnode refid="685" relation="usage">
          <edgelabel>cp</edgelabel>
        </childnode>
        <childnode refid="686" relation="usage">
          <edgelabel>clustering_index</edgelabel>
          <edgelabel>quantizer</edgelabel>
        </childnode>
      </node>
      <node id="685">
        <label>faiss::ClusteringParameters</label>
        <link refid="structfaiss_1_1ClusteringParameters"/>
      </node>
      <node id="686">
        <label>faiss::Index</label>
        <link refid="structfaiss_1_1Index"/>
      </node>
    </collaborationgraph>
    <location file="faiss/IndexIVF.h" line="31" column="1" bodyfile="faiss/IndexIVF.h" bodystart="31" bodyend="63"/>
    <listofallmembers>
      <member refid="structfaiss_1_1Level1Quantizer_1a45d29dd6a5c53789c08e5ceb3f63d989" prot="public" virt="non-virtual"><scope>faiss::Level1Quantizer</scope><name>clustering_index</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1a28fb5379de2f35f1b86ae5019ec4128f" prot="public" virt="non-virtual"><scope>faiss::Level1Quantizer</scope><name>coarse_code_size</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1abb7097ed40b15ba0af08af6d03608f72" prot="public" virt="non-virtual"><scope>faiss::Level1Quantizer</scope><name>cp</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1a64f28832f84e8559f9b76ccd3a3046d3" prot="public" virt="non-virtual"><scope>faiss::Level1Quantizer</scope><name>decode_listno</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1a8d36d811aaf11daeae2a3f580747c5b2" prot="public" virt="non-virtual"><scope>faiss::Level1Quantizer</scope><name>encode_listno</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1a7262e1eb542b177308dab0c043e90d01" prot="public" virt="non-virtual"><scope>faiss::Level1Quantizer</scope><name>Level1Quantizer</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1a7623b6432ff9faee737ebe36b415fa18" prot="public" virt="non-virtual"><scope>faiss::Level1Quantizer</scope><name>Level1Quantizer</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1a1c4fc9d874d9492ee0ea27a5be388fa7" prot="public" virt="non-virtual"><scope>faiss::Level1Quantizer</scope><name>nlist</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1ab688c629cd42122d73517078b87f483d" prot="public" virt="non-virtual"><scope>faiss::Level1Quantizer</scope><name>own_fields</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1a3cf99e2ee92b8558a066f821efab95d5" prot="public" virt="non-virtual"><scope>faiss::Level1Quantizer</scope><name>quantizer</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1a1dcea762fc322fdcffe64f78994edea0" prot="public" virt="non-virtual"><scope>faiss::Level1Quantizer</scope><name>quantizer_trains_alone</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1a0069a6ee1e32c2e0c1c7df9a95740dd4" prot="public" virt="non-virtual"><scope>faiss::Level1Quantizer</scope><name>train_q1</name></member>
      <member refid="structfaiss_1_1Level1Quantizer_1ab0d7fc7420f306522923a96feddae7ca" prot="public" virt="non-virtual"><scope>faiss::Level1Quantizer</scope><name>~Level1Quantizer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
