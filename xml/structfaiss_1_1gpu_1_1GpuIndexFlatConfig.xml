<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structfaiss_1_1gpu_1_1GpuIndexFlatConfig" kind="struct" language="C++" prot="public">
    <compoundname>faiss::gpu::GpuIndexFlatConfig</compoundname>
    <basecompoundref refid="structfaiss_1_1gpu_1_1GpuIndexConfig" prot="public" virt="non-virtual">faiss::gpu::GpuIndexConfig</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1gpu_1_1GpuIndexFlatConfig_1afd694186c87751937a646f3db2c8ba3d" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool faiss::gpu::GpuIndexFlatConfig::useFloat16</definition>
        <argsstring></argsstring>
        <name>useFloat16</name>
        <briefdescription>
<para>Whether or not data is stored as float16. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/GpuIndexFlat.h" line="30" column="1" bodyfile="faiss/gpu/GpuIndexFlat.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1gpu_1_1GpuIndexFlatConfig_1a0342a26f5e59563bfe04f3f80e3b27f0" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool faiss::gpu::GpuIndexFlatConfig::storeTransposed</definition>
        <argsstring></argsstring>
        <name>storeTransposed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether or not data is stored (transparently) in a transposed layout, enabling use of the NN GEMM call, which is ~10% faster. This will improve the speed of the flat index, but will substantially slow down any add() calls made, as all data must be transposed, and will increase storage requirements (we store data in both transposed and non-transposed layouts). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/GpuIndexFlat.h" line="38" column="1" bodyfile="faiss/gpu/GpuIndexFlat.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1gpu_1_1GpuIndexConfig_1aab05a0aa7b42feae7df4e556a52ead57" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int faiss::gpu::GpuIndexConfig::device</definition>
        <argsstring></argsstring>
        <name>device</name>
        <briefdescription>
<para>GPU device on which the index is resident. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/GpuIndex.h" line="20" column="1" bodyfile="faiss/gpu/GpuIndex.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1gpu_1_1GpuIndexConfig_1adf7c9461009108a9a433a077ab322d2e" prot="public" static="no" mutable="no">
        <type>MemorySpace</type>
        <definition>MemorySpace faiss::gpu::GpuIndexConfig::memorySpace</definition>
        <argsstring></argsstring>
        <name>memorySpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>What memory space to use for primary storage. On Pascal and above (CC 6+) architectures, allows GPUs to use more memory than is available on the GPU. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/GpuIndex.h" line="25" column="1" bodyfile="faiss/gpu/GpuIndex.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structfaiss_1_1gpu_1_1GpuIndexFlatConfig_1a39b32076b957bd2e1de93df3f5f5ea0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::gpu::GpuIndexFlatConfig::GpuIndexFlatConfig</definition>
        <argsstring>()</argsstring>
        <name>GpuIndexFlatConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/GpuIndexFlat.h" line="27" column="1" bodyfile="faiss/gpu/GpuIndexFlat.h" bodystart="27" bodyend="27"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="127">
        <label>faiss::gpu::GpuIndexConfig</label>
        <link refid="structfaiss_1_1gpu_1_1GpuIndexConfig"/>
      </node>
      <node id="126">
        <label>faiss::gpu::GpuIndexFlatConfig</label>
        <link refid="structfaiss_1_1gpu_1_1GpuIndexFlatConfig"/>
        <childnode refid="127" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="129">
        <label>faiss::gpu::GpuIndexConfig</label>
        <link refid="structfaiss_1_1gpu_1_1GpuIndexConfig"/>
      </node>
      <node id="128">
        <label>faiss::gpu::GpuIndexFlatConfig</label>
        <link refid="structfaiss_1_1gpu_1_1GpuIndexFlatConfig"/>
        <childnode refid="129" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="faiss/gpu/GpuIndexFlat.h" line="26" column="1" bodyfile="faiss/gpu/GpuIndexFlat.h" bodystart="26" bodyend="39"/>
    <listofallmembers>
      <member refid="structfaiss_1_1gpu_1_1GpuIndexConfig_1aab05a0aa7b42feae7df4e556a52ead57" prot="public" virt="non-virtual"><scope>faiss::gpu::GpuIndexFlatConfig</scope><name>device</name></member>
      <member refid="structfaiss_1_1gpu_1_1GpuIndexConfig_1adabe0f431b8dec6968ef0abe91b17189" prot="public" virt="non-virtual"><scope>faiss::gpu::GpuIndexFlatConfig</scope><name>GpuIndexConfig</name></member>
      <member refid="structfaiss_1_1gpu_1_1GpuIndexFlatConfig_1a39b32076b957bd2e1de93df3f5f5ea0b" prot="public" virt="non-virtual"><scope>faiss::gpu::GpuIndexFlatConfig</scope><name>GpuIndexFlatConfig</name></member>
      <member refid="structfaiss_1_1gpu_1_1GpuIndexConfig_1adf7c9461009108a9a433a077ab322d2e" prot="public" virt="non-virtual"><scope>faiss::gpu::GpuIndexFlatConfig</scope><name>memorySpace</name></member>
      <member refid="structfaiss_1_1gpu_1_1GpuIndexFlatConfig_1a0342a26f5e59563bfe04f3f80e3b27f0" prot="public" virt="non-virtual"><scope>faiss::gpu::GpuIndexFlatConfig</scope><name>storeTransposed</name></member>
      <member refid="structfaiss_1_1gpu_1_1GpuIndexFlatConfig_1afd694186c87751937a646f3db2c8ba3d" prot="public" virt="non-virtual"><scope>faiss::gpu::GpuIndexFlatConfig</scope><name>useFloat16</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
