<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structfaiss_1_1IndexBinaryHash_1_1InvertedList" kind="struct" language="C++" prot="public">
    <compoundname>faiss::IndexBinaryHash::InvertedList</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1IndexBinaryHash_1_1InvertedList_1a8e8d2f8553144c139cbd1eb4ff4b0981" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structfaiss_1_1IndexBinary_1a01749bbdbd3b7ec6bb9390257ab16c5c" kindref="member">idx_t</ref> &gt;</type>
        <definition>std::vector&lt;idx_t&gt; faiss::IndexBinaryHash::InvertedList::ids</definition>
        <argsstring></argsstring>
        <name>ids</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexBinaryHash.h" line="33" column="1" bodyfile="faiss/IndexBinaryHash.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1IndexBinaryHash_1_1InvertedList_1a25be37ebe2805f79a5b81f54b031ad47" prot="public" static="no" mutable="no">
        <type>std::vector&lt; uint8_t &gt;</type>
        <definition>std::vector&lt;uint8_t&gt; faiss::IndexBinaryHash::InvertedList::vecs</definition>
        <argsstring></argsstring>
        <name>vecs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexBinaryHash.h" line="34" column="1" bodyfile="faiss/IndexBinaryHash.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structfaiss_1_1IndexBinaryHash_1_1InvertedList_1a8a2d55c9c12b9a5f4af4ba20d819b39a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::IndexBinaryHash::InvertedList::add</definition>
        <argsstring>(idx_t id, size_t code_size, const uint8_t *code)</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="structfaiss_1_1IndexBinary_1a01749bbdbd3b7ec6bb9390257ab16c5c" kindref="member">idx_t</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>code_size</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/IndexBinaryHash.h" line="36" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="faiss/IndexBinaryHash.h" line="32" column="1" bodyfile="faiss/IndexBinaryHash.h" bodystart="32" bodyend="37"/>
    <listofallmembers>
      <member refid="structfaiss_1_1IndexBinaryHash_1_1InvertedList_1a8a2d55c9c12b9a5f4af4ba20d819b39a" prot="public" virt="non-virtual"><scope>faiss::IndexBinaryHash::InvertedList</scope><name>add</name></member>
      <member refid="structfaiss_1_1IndexBinaryHash_1_1InvertedList_1a8e8d2f8553144c139cbd1eb4ff4b0981" prot="public" virt="non-virtual"><scope>faiss::IndexBinaryHash::InvertedList</scope><name>ids</name></member>
      <member refid="structfaiss_1_1IndexBinaryHash_1_1InvertedList_1a25be37ebe2805f79a5b81f54b031ad47" prot="public" virt="non-virtual"><scope>faiss::IndexBinaryHash::InvertedList</scope><name>vecs</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
