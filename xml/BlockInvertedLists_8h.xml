<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="BlockInvertedLists_8h" kind="file" language="C++">
    <compoundname>BlockInvertedLists.h</compoundname>
    <includes refid="index__io_8h" local="no">faiss/index_io.h</includes>
    <includes refid="InvertedLists_8h" local="no">faiss/invlists/InvertedLists.h</includes>
    <includes refid="InvertedListsIOHook_8h" local="no">faiss/invlists/InvertedListsIOHook.h</includes>
    <includes refid="AlignedTable_8h" local="no">faiss/utils/AlignedTable.h</includes>
    <incdepgraph>
      <node id="1047">
        <label>faiss/utils/AlignedTable.h</label>
        <link refid="AlignedTable_8h_source"/>
        <childnode refid="1048" relation="include">
        </childnode>
        <childnode refid="1049" relation="include">
        </childnode>
        <childnode refid="1050" relation="include">
        </childnode>
        <childnode refid="1051" relation="include">
        </childnode>
        <childnode refid="1052" relation="include">
        </childnode>
        <childnode refid="1053" relation="include">
        </childnode>
      </node>
      <node id="1053">
        <label>faiss/impl/platform_macros.h</label>
      </node>
      <node id="1049">
        <label>cstdint</label>
      </node>
      <node id="1041">
        <label>faiss/invlists/InvertedLists.h</label>
        <link refid="InvertedLists_8h_source"/>
        <childnode refid="1042" relation="include">
        </childnode>
        <childnode refid="1040" relation="include">
        </childnode>
      </node>
      <node id="1048">
        <label>cassert</label>
      </node>
      <node id="1038">
        <label>string</label>
      </node>
      <node id="1039">
        <label>typeinfo</label>
      </node>
      <node id="1037">
        <label>cstdio</label>
      </node>
      <node id="1040">
        <label>vector</label>
      </node>
      <node id="1044">
        <label>sstream</label>
      </node>
      <node id="1050">
        <label>cstdlib</label>
      </node>
      <node id="1046">
        <label>faiss/impl/io.h</label>
      </node>
      <node id="1042">
        <label>faiss/Index.h</label>
        <link refid="Index_8h_source"/>
        <childnode refid="1043" relation="include">
        </childnode>
        <childnode refid="1037" relation="include">
        </childnode>
        <childnode refid="1044" relation="include">
        </childnode>
        <childnode refid="1038" relation="include">
        </childnode>
        <childnode refid="1039" relation="include">
        </childnode>
      </node>
      <node id="1043">
        <label>faiss/MetricType.h</label>
        <link refid="MetricType_8h_source"/>
      </node>
      <node id="1035">
        <label>faiss/invlists/BlockInvertedLists.h</label>
        <link refid="BlockInvertedLists_8h"/>
        <childnode refid="1036" relation="include">
        </childnode>
        <childnode refid="1041" relation="include">
        </childnode>
        <childnode refid="1045" relation="include">
        </childnode>
        <childnode refid="1047" relation="include">
        </childnode>
      </node>
      <node id="1036">
        <label>faiss/index_io.h</label>
        <link refid="index__io_8h_source"/>
        <childnode refid="1037" relation="include">
        </childnode>
        <childnode refid="1038" relation="include">
        </childnode>
        <childnode refid="1039" relation="include">
        </childnode>
        <childnode refid="1040" relation="include">
        </childnode>
      </node>
      <node id="1045">
        <label>faiss/invlists/InvertedListsIOHook.h</label>
        <link refid="InvertedListsIOHook_8h_source"/>
        <childnode refid="1046" relation="include">
        </childnode>
        <childnode refid="1041" relation="include">
        </childnode>
        <childnode refid="1038" relation="include">
        </childnode>
      </node>
      <node id="1052">
        <label>algorithm</label>
      </node>
      <node id="1051">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <innerclass refid="structfaiss_1_1BlockInvertedLists" prot="public">faiss::BlockInvertedLists</innerclass>
    <innerclass refid="structfaiss_1_1BlockInvertedListsIOHook" prot="public">faiss::BlockInvertedListsIOHook</innerclass>
    <innernamespace refid="namespacefaiss">faiss</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>Facebook,<sp/>Inc.<sp/>and<sp/>its<sp/>affiliates.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory<sp/>of<sp/>this<sp/>source<sp/>tree.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;faiss/index_io.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;faiss/invlists/InvertedLists.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;faiss/invlists/InvertedListsIOHook.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;faiss/utils/AlignedTable.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacefaiss" kindref="compound">faiss</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment">/**<sp/>Inverted<sp/>Lists<sp/>that<sp/>are<sp/>organized<sp/>by<sp/>blocks.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Different<sp/>from<sp/>the<sp/>regular<sp/>inverted<sp/>lists,<sp/>the<sp/>codes<sp/>are<sp/>organized<sp/>by<sp/>blocks</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>of<sp/>size<sp/>block_size<sp/>bytes<sp/>that<sp/>reprsent<sp/>a<sp/>set<sp/>of<sp/>n_per_block.<sp/>Therefore,<sp/>code</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>allocations<sp/>are<sp/>always<sp/>rounded<sp/>up<sp/>to<sp/>block_size<sp/>bytes.<sp/>The<sp/>codes<sp/>are<sp/>also</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>aligned<sp/>on<sp/>32-byte<sp/>boundaries<sp/>for<sp/>use<sp/>with<sp/>SIMD.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>To<sp/>avoid<sp/>misinterpretations,<sp/>the<sp/>code_size<sp/>is<sp/>set<sp/>to<sp/>(size_t)(-1),<sp/>even<sp/>if</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>arguably<sp/>the<sp/>amount<sp/>of<sp/>memory<sp/>consumed<sp/>by<sp/>code<sp/>is<sp/>block_size<sp/>/<sp/>n_per_block.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>The<sp/>writing<sp/>functions<sp/>add_entries<sp/>and<sp/>update_entries<sp/>operate<sp/>on<sp/>block-aligned</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>data.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structfaiss_1_1BlockInvertedLists" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfaiss_1_1BlockInvertedLists" kindref="compound">BlockInvertedLists</ref><sp/>:<sp/><ref refid="structfaiss_1_1InvertedLists" kindref="compound">InvertedLists</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_per_block;<sp/></highlight><highlight class="comment">//<sp/>nb<sp/>of<sp/>vectors<sp/>stored<sp/>per<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>block_size;<sp/><sp/></highlight><highlight class="comment">//<sp/>nb<sp/>bytes<sp/>per<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;AlignedTable&lt;uint8_t&gt;&gt;<sp/>codes;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;idx_t&gt;&gt;<sp/>ids;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfaiss_1_1BlockInvertedLists" kindref="compound">BlockInvertedLists</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structfaiss_1_1InvertedLists_1afaf8b7aa3e846aa4553f6aae67827ec8" kindref="member">nlist</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>vec_per_block,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>block_size);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfaiss_1_1BlockInvertedLists" kindref="compound">BlockInvertedLists</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structfaiss_1_1BlockInvertedLists_1a6b31daaea6703be4f1e55d5d01b301ff" kindref="member">list_size</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>list_no)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="structfaiss_1_1BlockInvertedLists_1a6bb2c32aa717167d259fc5473d53f86c" kindref="member">get_codes</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>list_no)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idx_t*<sp/><ref refid="structfaiss_1_1BlockInvertedLists_1a4ed87af2e06c67f2b6635211489075f5" kindref="member">get_ids</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>list_no)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>works<sp/>only<sp/>on<sp/>empty<sp/>BlockInvertedLists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>codes<sp/>should<sp/>be<sp/>of<sp/>size<sp/>ceil(n_entry<sp/>/<sp/>n_per_block)<sp/>*<sp/>block_size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>padded<sp/>with<sp/>0s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>add_entries(</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>list_no,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_entry,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idx_t*<sp/>ids,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>code)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>not<sp/>implemented</highlight></codeline>
<codeline lineno="55"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structfaiss_1_1BlockInvertedLists_1aa5d61744a1478c537fec67e64b4dbe25" kindref="member">update_entries</ref>(</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>list_no,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_entry,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>idx_t*<sp/>ids,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>code)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>also<sp/>pads<sp/>new<sp/>data<sp/>with<sp/>0s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resize(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>list_no,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_size)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="structfaiss_1_1BlockInvertedLists" kindref="compound">BlockInvertedLists</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="structfaiss_1_1BlockInvertedListsIOHook" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfaiss_1_1BlockInvertedListsIOHook" kindref="compound">BlockInvertedListsIOHook</ref><sp/>:<sp/><ref refid="structfaiss_1_1InvertedListsIOHook" kindref="compound">InvertedListsIOHook</ref><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfaiss_1_1BlockInvertedListsIOHook" kindref="compound">BlockInvertedListsIOHook</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structfaiss_1_1InvertedLists" kindref="compound">InvertedLists</ref>*<sp/>ils,<sp/>IOWriter*<sp/>f)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfaiss_1_1InvertedLists" kindref="compound">InvertedLists</ref>*<sp/>read(IOReader*<sp/>f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>io_flags)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>faiss</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="faiss/invlists/BlockInvertedLists.h"/>
  </compounddef>
</doxygen>
