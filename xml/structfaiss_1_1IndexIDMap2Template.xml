<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structfaiss_1_1IndexIDMap2Template" kind="struct" language="C++" prot="public">
    <compoundname>faiss::IndexIDMap2Template</compoundname>
    <basecompoundref refid="structfaiss_1_1IndexIDMapTemplate" prot="public" virt="non-virtual">faiss::IndexIDMapTemplate&lt; IndexT &gt;</basecompoundref>
    <includes refid="MetaIndexes_8h" local="no">MetaIndexes.h</includes>
    <templateparamlist>
      <param>
        <type>typename IndexT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structfaiss_1_1IndexIDMap2Template_1a4920bf4eb91addd483e85fd7c7691615" prot="public" static="no">
        <type>typename IndexT::idx_t</type>
        <definition>using faiss::IndexIDMap2Template&lt; IndexT &gt;::idx_t =  typename IndexT::idx_t</definition>
        <argsstring></argsstring>
        <name>idx_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/MetaIndexes.h" line="75" column="1" bodyfile="faiss/MetaIndexes.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structfaiss_1_1IndexIDMap2Template_1aee4b15cf1872fb69d8a6adf25da3c253" prot="public" static="no">
        <type>typename IndexT::component_t</type>
        <definition>using faiss::IndexIDMap2Template&lt; IndexT &gt;::component_t =  typename IndexT::component_t</definition>
        <argsstring></argsstring>
        <name>component_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/MetaIndexes.h" line="76" column="1" bodyfile="faiss/MetaIndexes.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structfaiss_1_1IndexIDMap2Template_1a33649b40957664a1437c385b0e77ccbe" prot="public" static="no">
        <type>typename IndexT::distance_t</type>
        <definition>using faiss::IndexIDMap2Template&lt; IndexT &gt;::distance_t =  typename IndexT::distance_t</definition>
        <argsstring></argsstring>
        <name>distance_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/MetaIndexes.h" line="77" column="1" bodyfile="faiss/MetaIndexes.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1IndexIDMap2Template_1ae11b9dae4245ace5eb2a28ad6a5fdff9" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; idx_t, idx_t &gt;</type>
        <definition>std::unordered_map&lt;idx_t, idx_t&gt; faiss::IndexIDMap2Template&lt; IndexT &gt;::rev_map</definition>
        <argsstring></argsstring>
        <name>rev_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/MetaIndexes.h" line="79" column="1" bodyfile="faiss/MetaIndexes.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1IndexIDMapTemplate_1a2b6e5fb115db333ad99e25de74864fdf" prot="public" static="no" mutable="no">
        <type>IndexT *</type>
        <definition>IndexT* faiss::IndexIDMapTemplate&lt; IndexT &gt;::index</definition>
        <argsstring></argsstring>
        <name>index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/MetaIndexes.h" line="28" column="1" bodyfile="faiss/MetaIndexes.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1IndexIDMapTemplate_1a6312303b535755beee7b487c99b07df1" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool faiss::IndexIDMapTemplate&lt; IndexT &gt;::own_fields</definition>
        <argsstring></argsstring>
        <name>own_fields</name>
        <briefdescription>
<para>! the sub-index </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/MetaIndexes.h" line="29" column="1" bodyfile="faiss/MetaIndexes.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1IndexIDMapTemplate_1a223985f0cd852b3ae7372506022662e0" prot="public" static="no" mutable="no">
        <type>std::vector&lt; idx_t &gt;</type>
        <definition>std::vector&lt;idx_t&gt; faiss::IndexIDMapTemplate&lt; IndexT &gt;::id_map</definition>
        <argsstring></argsstring>
        <name>id_map</name>
        <briefdescription>
<para>! whether pointers are deleted in destructo </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/MetaIndexes.h" line="30" column="1" bodyfile="faiss/MetaIndexes.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structfaiss_1_1IndexIDMap2Template_1a329f106e2ca6b71377083d5709f1b281" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>faiss::IndexIDMap2Template&lt; IndexT &gt;::IndexIDMap2Template</definition>
        <argsstring>(IndexT *index)</argsstring>
        <name>IndexIDMap2Template</name>
        <param>
          <type>IndexT *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/MetaIndexes.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1IndexIDMap2Template_1afbd7827eb740d19fb7f48f734cd05dd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::IndexIDMap2Template&lt; IndexT &gt;::construct_rev_map</definition>
        <argsstring>()</argsstring>
        <name>construct_rev_map</name>
        <briefdescription>
<para>make the rev_map from scratch </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/MetaIndexes.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1IndexIDMap2Template_1a751cb1ab67ffa1de83260e7bc72f61fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::IndexIDMap2Template&lt; IndexT &gt;::add_with_ids</definition>
        <argsstring>(idx_t n, const component_t *x, const idx_t *xids) override</argsstring>
        <name>add_with_ids</name>
        <param>
          <type>idx_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const component_t *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const idx_t *</type>
          <declname>xids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/MetaIndexes.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1IndexIDMap2Template_1a8bd3808ffe012654687a584f5e553d50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t faiss::IndexIDMap2Template&lt; IndexT &gt;::remove_ids</definition>
        <argsstring>(const IDSelector &amp;sel) override</argsstring>
        <name>remove_ids</name>
        <param>
          <type>const IDSelector &amp;</type>
          <declname>sel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/MetaIndexes.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1IndexIDMap2Template_1a2c3380bb909224c37d536316134d348a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::IndexIDMap2Template&lt; IndexT &gt;::reconstruct</definition>
        <argsstring>(idx_t key, component_t *recons) const override</argsstring>
        <name>reconstruct</name>
        <param>
          <type>idx_t</type>
          <declname>key</declname>
        </param>
        <param>
          <type>component_t *</type>
          <declname>recons</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/MetaIndexes.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1IndexIDMap2Template_1ab1c1d72f24c58dc8b8cafe03c0a9e7a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::IndexIDMap2Template&lt; IndexT &gt;::~IndexIDMap2Template</definition>
        <argsstring>() override</argsstring>
        <name>~IndexIDMap2Template</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/MetaIndexes.h" line="93" column="1" bodyfile="faiss/MetaIndexes.h" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1IndexIDMap2Template_1a99adaac68f041b2c149bdae6d57c805a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::IndexIDMap2Template&lt; IndexT &gt;::IndexIDMap2Template</definition>
        <argsstring>()</argsstring>
        <name>IndexIDMap2Template</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/MetaIndexes.h" line="94" column="1" bodyfile="faiss/MetaIndexes.h" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1IndexIDMapTemplate_1a79498bca09342333e351bb6a4da8984d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::IndexIDMapTemplate&lt; IndexT &gt;::add</definition>
        <argsstring>(idx_t n, const component_t *x) override</argsstring>
        <name>add</name>
        <param>
          <type>idx_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const component_t *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>this will fail. Use add_with_ids </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/MetaIndexes.h" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1IndexIDMapTemplate_1aa81597506b85759ce5b5d291a3bc631d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::IndexIDMapTemplate&lt; IndexT &gt;::search</definition>
        <argsstring>(idx_t n, const component_t *x, idx_t k, distance_t *distances, idx_t *labels) const override</argsstring>
        <name>search</name>
        <param>
          <type>idx_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const component_t *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>idx_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>distance_t *</type>
          <declname>distances</declname>
        </param>
        <param>
          <type>idx_t *</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/MetaIndexes.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1IndexIDMapTemplate_1a6b9a5e978a69c99d93b6b8b2a3324f34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::IndexIDMapTemplate&lt; IndexT &gt;::train</definition>
        <argsstring>(idx_t n, const component_t *x) override</argsstring>
        <name>train</name>
        <param>
          <type>idx_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const component_t *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/MetaIndexes.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1IndexIDMapTemplate_1a31821431b6a6b960ecb18b8c2ac46372" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::IndexIDMapTemplate&lt; IndexT &gt;::reset</definition>
        <argsstring>() override</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/MetaIndexes.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1IndexIDMapTemplate_1aa38b6bb7586c783aa33ab3d00ce8484a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::IndexIDMapTemplate&lt; IndexT &gt;::range_search</definition>
        <argsstring>(idx_t n, const component_t *x, distance_t radius, RangeSearchResult *result) const override</argsstring>
        <name>range_search</name>
        <param>
          <type>idx_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const component_t *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>distance_t</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>RangeSearchResult *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/MetaIndexes.h" line="55" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>same as IndexIDMap but also provides an efficient reconstruction implementation via a 2-way index </para>    </detaileddescription>
    <inheritancegraph>
      <node id="442">
        <label>faiss::IndexIDMapTemplate&lt; IndexT &gt;</label>
        <link refid="structfaiss_1_1IndexIDMapTemplate"/>
        <childnode refid="443" relation="public-inheritance">
        </childnode>
      </node>
      <node id="443">
        <label>IndexT</label>
      </node>
      <node id="441">
        <label>faiss::IndexIDMap2Template&lt; IndexT &gt;</label>
        <link refid="structfaiss_1_1IndexIDMap2Template"/>
        <childnode refid="442" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="445">
        <label>faiss::IndexIDMapTemplate&lt; IndexT &gt;</label>
        <link refid="structfaiss_1_1IndexIDMapTemplate"/>
        <childnode refid="446" relation="public-inheritance">
        </childnode>
      </node>
      <node id="446">
        <label>IndexT</label>
      </node>
      <node id="444">
        <label>faiss::IndexIDMap2Template&lt; IndexT &gt;</label>
        <link refid="structfaiss_1_1IndexIDMap2Template"/>
        <childnode refid="445" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="faiss/MetaIndexes.h" line="74" column="1" bodyfile="faiss/MetaIndexes.h" bodystart="74" bodyend="95"/>
    <listofallmembers>
      <member refid="structfaiss_1_1IndexIDMapTemplate_1a79498bca09342333e351bb6a4da8984d" prot="public" virt="non-virtual"><scope>faiss::IndexIDMap2Template</scope><name>add</name></member>
      <member refid="structfaiss_1_1IndexIDMap2Template_1a751cb1ab67ffa1de83260e7bc72f61fe" prot="public" virt="non-virtual"><scope>faiss::IndexIDMap2Template</scope><name>add_with_ids</name></member>
      <member refid="structfaiss_1_1IndexIDMap2Template_1aee4b15cf1872fb69d8a6adf25da3c253" prot="public" virt="non-virtual"><scope>faiss::IndexIDMap2Template</scope><name>component_t</name></member>
      <member refid="structfaiss_1_1IndexIDMap2Template_1afbd7827eb740d19fb7f48f734cd05dd4" prot="public" virt="non-virtual"><scope>faiss::IndexIDMap2Template</scope><name>construct_rev_map</name></member>
      <member refid="structfaiss_1_1IndexIDMap2Template_1a33649b40957664a1437c385b0e77ccbe" prot="public" virt="non-virtual"><scope>faiss::IndexIDMap2Template</scope><name>distance_t</name></member>
      <member refid="structfaiss_1_1IndexIDMapTemplate_1a223985f0cd852b3ae7372506022662e0" prot="public" virt="non-virtual"><scope>faiss::IndexIDMap2Template</scope><name>id_map</name></member>
      <member refid="structfaiss_1_1IndexIDMap2Template_1a4920bf4eb91addd483e85fd7c7691615" prot="public" virt="non-virtual"><scope>faiss::IndexIDMap2Template</scope><name>idx_t</name></member>
      <member refid="structfaiss_1_1IndexIDMapTemplate_1a2b6e5fb115db333ad99e25de74864fdf" prot="public" virt="non-virtual"><scope>faiss::IndexIDMap2Template</scope><name>index</name></member>
      <member refid="structfaiss_1_1IndexIDMap2Template_1a329f106e2ca6b71377083d5709f1b281" prot="public" virt="non-virtual"><scope>faiss::IndexIDMap2Template</scope><name>IndexIDMap2Template</name></member>
      <member refid="structfaiss_1_1IndexIDMap2Template_1a99adaac68f041b2c149bdae6d57c805a" prot="public" virt="non-virtual"><scope>faiss::IndexIDMap2Template</scope><name>IndexIDMap2Template</name></member>
      <member refid="structfaiss_1_1IndexIDMapTemplate_1a9f07bb23015ebc982e965d4b0d2325ac" prot="public" virt="non-virtual"><scope>faiss::IndexIDMap2Template</scope><name>IndexIDMapTemplate</name></member>
      <member refid="structfaiss_1_1IndexIDMapTemplate_1adcc8e05b7bd4061f05a4fdde86a4c136" prot="public" virt="non-virtual"><scope>faiss::IndexIDMap2Template</scope><name>IndexIDMapTemplate</name></member>
      <member refid="structfaiss_1_1IndexIDMapTemplate_1a6312303b535755beee7b487c99b07df1" prot="public" virt="non-virtual"><scope>faiss::IndexIDMap2Template</scope><name>own_fields</name></member>
      <member refid="structfaiss_1_1IndexIDMapTemplate_1aa38b6bb7586c783aa33ab3d00ce8484a" prot="public" virt="non-virtual"><scope>faiss::IndexIDMap2Template</scope><name>range_search</name></member>
      <member refid="structfaiss_1_1IndexIDMap2Template_1a2c3380bb909224c37d536316134d348a" prot="public" virt="non-virtual"><scope>faiss::IndexIDMap2Template</scope><name>reconstruct</name></member>
      <member refid="structfaiss_1_1IndexIDMap2Template_1a8bd3808ffe012654687a584f5e553d50" prot="public" virt="non-virtual"><scope>faiss::IndexIDMap2Template</scope><name>remove_ids</name></member>
      <member refid="structfaiss_1_1IndexIDMapTemplate_1a31821431b6a6b960ecb18b8c2ac46372" prot="public" virt="non-virtual"><scope>faiss::IndexIDMap2Template</scope><name>reset</name></member>
      <member refid="structfaiss_1_1IndexIDMap2Template_1ae11b9dae4245ace5eb2a28ad6a5fdff9" prot="public" virt="non-virtual"><scope>faiss::IndexIDMap2Template</scope><name>rev_map</name></member>
      <member refid="structfaiss_1_1IndexIDMapTemplate_1aa81597506b85759ce5b5d291a3bc631d" prot="public" virt="non-virtual"><scope>faiss::IndexIDMap2Template</scope><name>search</name></member>
      <member refid="structfaiss_1_1IndexIDMapTemplate_1a6b9a5e978a69c99d93b6b8b2a3324f34" prot="public" virt="non-virtual"><scope>faiss::IndexIDMap2Template</scope><name>train</name></member>
      <member refid="structfaiss_1_1IndexIDMap2Template_1ab1c1d72f24c58dc8b8cafe03c0a9e7a9" prot="public" virt="non-virtual"><scope>faiss::IndexIDMap2Template</scope><name>~IndexIDMap2Template</name></member>
      <member refid="structfaiss_1_1IndexIDMapTemplate_1a07bd2e93b6d9ad135f2c60acc38e3341" prot="public" virt="non-virtual"><scope>faiss::IndexIDMap2Template</scope><name>~IndexIDMapTemplate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
